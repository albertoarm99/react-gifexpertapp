{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setcategorias","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categorias","type","value","onChange","target","protoType","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GitExpertApp","ReactDOM","render","document","getElementById"],"mappings":"4NAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAU,IAA9C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,mCACI,sBAAMC,SAXO,SAAEC,GACnBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAc,MAOd,SACI,uBACIO,KAAO,OACPC,MAAUT,EACVU,SApBU,SAAEP,GAExBF,EAAcE,EAAEQ,OAAOF,eAyB/BZ,EAAYe,UAAY,CACpBd,cAAee,IAAUC,KAAKC,Y,mCCjCrBC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,0FAC4EC,UAAUH,GADtF,sBAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACpC,OACI,sBAAKc,UAAU,2DAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAWtB,ECZwB,SAAEA,GAC1B,MAA0BlB,mBAAS,CAC/ByB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAbAC,qBAAU,WACNxB,EAASC,GACJwB,MAAK,SAAAC,GAEFC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEf,UAEX,CAACpB,IAEGqB,EDP0BM,CAAc3B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDhB,IACnDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEKA,GADAA,EAAIC,aEtBpBiB,EAAe,WAIxB,MAAoC9C,mBAAS,CAAC,cAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAUA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBACA,6BAEQS,EAAWmB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAUA,GADLA,YCtBjC6B,IAASC,OAEL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.66089785.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setcategorias} ) => {\r\n\r\n    const [inputValue, setinputValue] = useState ('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        //console.log(e.target.value);\r\n        setinputValue(e.target.value);\r\n    }\r\n    \r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setcategorias( categorias => [inputValue, ...categorias] );\r\n            setinputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={ handleSubmit }>\r\n                <input\r\n                    type = 'text'\r\n                    value = { inputValue }\r\n                    onChange ={ handleInputChange }\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.protoType = {\r\n    setcategorias: PropTypes.func.isRequired\r\n}\r\n","\r\n\r\nexport const getGifs = async ( category ) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=q28I7RDNl8H4Je0HDcRTfXNTe8PoaNln&q=${encodeURI(category)}&limit=10`;\r\n    const resp = await fetch (url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n\r\n    return(gifs);\r\n}","import React from 'react'\r\n\r\n\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__delay-5s\" >\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n//import {getGifs} from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n    /* const [images, setImages] = useState([]);\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        getGifs( category ).then(setImages);\r\n    }, [category]) */\r\n    \r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__bounce\">{ category }</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n            <div className='card-grid'>\r\n                {\r\n                    images.map( img =>\r\n                        <GifGridItem\r\n                        key={img.id}\r\n                        { ...img } />\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","\r\nimport {useEffect, useState} from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs( category )\r\n            .then(imgs =>{\r\n\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n                },3000);\r\n        });\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GitExpertApp = () => {\r\n\r\n    //const categorias = ['One punch','Samurai X','Dragon ball']\r\n\r\n    const [categorias, setcategorias] = useState(['One punch']);\r\n\r\n   /*  const handleAdd = () => {\r\n        //setcategorias( categorias.concat('Hola') );\r\n        //setcategorias( [...categorias,'HunterXHunter'] );\r\n        //setcategorias( cats => [...cats ,'HunterXHunter'] );\r\n\r\n\r\n    }\r\n */\r\n    return (\r\n        <>\r\n            <h2>GitExpertApp</h2>\r\n            <AddCategory setcategorias = {setcategorias}/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categorias.map( category =>\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {GitExpertApp} from './GitExpertApp'\n\nReactDOM.render(\n\n    <GitExpertApp />,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}